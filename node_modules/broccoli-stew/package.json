{
  "_args": [
    [
      {
        "raw": "broccoli-stew@^1.3.3",
        "scope": null,
        "escapedName": "broccoli-stew",
        "name": "broccoli-stew",
        "rawSpec": "^1.3.3",
        "spec": ">=1.3.3 <2.0.0",
        "type": "range"
      },
      "/Users/natemamman/reader/node_modules/broccoli-concat"
    ]
  ],
  "_from": "broccoli-stew@>=1.3.3 <2.0.0",
  "_id": "broccoli-stew@1.4.2",
  "_inCache": true,
  "_location": "/broccoli-stew",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/broccoli-stew-1.4.2.tgz_1492446702783_0.3925064238719642"
  },
  "_npmUser": {
    "name": "stefanpenner",
    "email": "stefan.penner@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {
    "ensure-posix-path": "1.0.2",
    "jsonfile": "2.4.0",
    "matcher-collection": "1.0.4"
  },
  "_requested": {
    "raw": "broccoli-stew@^1.3.3",
    "scope": null,
    "escapedName": "broccoli-stew",
    "name": "broccoli-stew",
    "rawSpec": "^1.3.3",
    "spec": ">=1.3.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/broccoli-concat"
  ],
  "_resolved": "https://registry.npmjs.org/broccoli-stew/-/broccoli-stew-1.4.2.tgz",
  "_shasum": "9ec4062fd7162c6026561a2fbf64558363aff8d6",
  "_shrinkwrap": null,
  "_spec": "broccoli-stew@^1.3.3",
  "_where": "/Users/natemamman/reader/node_modules/broccoli-concat",
  "author": {
    "name": "Stefan Penner & Robert Jackson"
  },
  "bugs": {
    "url": "https://github.com/stefanpenner/broccoli-stew/issues"
  },
  "dependencies": {
    "broccoli-funnel": "^1.0.1",
    "broccoli-merge-trees": "^1.0.0",
    "broccoli-persistent-filter": "^1.1.6",
    "broccoli-plugin": "^1.3.0",
    "chalk": "^1.1.3",
    "debug": "^2.4.0",
    "ensure-posix-path": "^1.0.1",
    "fs-extra": "^2.0.0",
    "minimatch": "^3.0.2",
    "resolve": "^1.1.6",
    "rsvp": "^3.0.16",
    "sanitize-filename": "^1.5.3",
    "symlink-or-copy": "^1.1.8",
    "walk-sync": "^0.3.0"
  },
  "description": "foundation of any healthy brocfile",
  "devDependencies": {
    "benchmark": "^2.1.1",
    "broccoli": "^1.1.0",
    "broccoli-test-helper": "^1.1.0",
    "broccoli-test-helpers": "0.0.9",
    "chai": "^3.5.0",
    "co": "^4.6.0",
    "mocha": "^3.0.0",
    "path-win32": "^1.0.1",
    "rewire": "^2.3.1",
    "sinon": "^2.0.0",
    "whatwg-fetch": "^2.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "9ec4062fd7162c6026561a2fbf64558363aff8d6",
    "tarball": "https://registry.npmjs.org/broccoli-stew/-/broccoli-stew-1.4.2.tgz"
  },
  "files": [
    "index.js",
    "lib/"
  ],
  "gitHead": "a3cb8e0494db2f5b0d881facf7a9271b83013b97",
  "homepage": "https://github.com/stefanpenner/broccoli-stew",
  "keywords": [
    "broccoli",
    "broccoli-plugin"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "caitp",
      "email": "caitpotter88@gmail.com"
    },
    {
      "name": "chadhietala",
      "email": "chadhietala@gmail.com"
    },
    {
      "name": "kellyselden",
      "email": "kellyselden@gmail.com"
    },
    {
      "name": "stefanpenner",
      "email": "stefan.penner@gmail.com"
    },
    {
      "name": "zackthehuman",
      "email": "zack@zackthehuman.com"
    }
  ],
  "name": "broccoli-stew",
  "optionalDependencies": {},
  "readme": "# Broccoli Stew [![Build Status](https://travis-ci.org/stefanpenner/broccoli-stew.svg)](https://travis-ci.org/stefanpenner/broccoli-stew) [![Build status](https://ci.appveyor.com/api/projects/status/orspre01ru61xiba?svg=true)](https://ci.appveyor.com/project/embercli/broccoli-stew) [![Inline docs](http://inch-ci.org/github/stefanpenner/broccoli-stew.svg?branch=master)](http://inch-ci.org/github/stefanpenner/broccoli-stew)\n\nProvides commonly used convenience functions for developing broccoli based build pipelines.\n\n## What's inside\n\nCurrently the following methods are available:\n\n- [`env`](https://github.com/stefanpenner/broccoli-stew/blob/master/lib/env.js#L27) - Conditionally runs a callback based upon the current environment.\n- [`mv`](https://github.com/stefanpenner/broccoli-stew/blob/master/lib/mv.js#L58) -  Moves an input tree to a different location.\n- [`rename`](https://github.com/stefanpenner/broccoli-stew/blob/master/lib/rename.js#L26) - Renames files in a tree.\n- [`find`](https://github.com/stefanpenner/broccoli-stew/blob/master/lib/find.js#L85) - Match files in a tree.\n- [`map`](https://github.com/stefanpenner/broccoli-stew/blob/master/lib/map.js#L31) - Maps files, allow for simple content mutation.\n- [`log`](https://github.com/stefanpenner/broccoli-stew/blob/master/lib/log.js#L27) - Logs out files in the passed tree.\n- [`debug`](https://github.com/stefanpenner/broccoli-stew/blob/master/lib/debug.js#L12) - Writes the passed tree to disk at the root of the project.\n- [`rm`](https://github.com/stefanpenner/broccoli-stew/blob/master/lib/rm.js#L40) - Remove files from a tree.\n- [`afterBuild`](https://github.com/stefanpenner/broccoli-stew/blob/master/lib/after-build.js) - Calls a callback function after the tree is read.\n- [`npm.main`](https://github.com/stefanpenner/broccoli-stew/blob/master/lib/npm.js#L17) - Create a tree with Node module's main entry\n\n\n## Ok, but tell me more\n\n* [using broccoli-stew to debug a broccoli tree](https://dockyard.com/blog/2015/02/02/debugging-a-broccoli-tree)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stefanpenner/broccoli-stew.git"
  },
  "scripts": {
    "test": "mocha tests/*-test.js tests/**/*-test.js",
    "test:debug": "mocha debug tests/*-test.js tests/**/*-test.js",
    "test:watch": "mocha --watch tests/*-test.js tests/**/*-test.js"
  },
  "version": "1.4.2"
}
