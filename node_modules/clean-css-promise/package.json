{
  "_args": [
    [
      {
        "raw": "clean-css-promise@^0.1.0",
        "scope": null,
        "escapedName": "clean-css-promise",
        "name": "clean-css-promise",
        "rawSpec": "^0.1.0",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "/Users/natemamman/reader/node_modules/broccoli-clean-css"
    ]
  ],
  "_from": "clean-css-promise@>=0.1.0 <0.2.0",
  "_id": "clean-css-promise@0.1.1",
  "_inCache": true,
  "_location": "/clean-css-promise",
  "_nodeVersion": "5.1.0",
  "_npmUser": {
    "name": "shinnn",
    "email": "snnskwtnb@gmail.com"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "clean-css-promise@^0.1.0",
    "scope": null,
    "escapedName": "clean-css-promise",
    "name": "clean-css-promise",
    "rawSpec": "^0.1.0",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/broccoli-clean-css"
  ],
  "_resolved": "https://registry.npmjs.org/clean-css-promise/-/clean-css-promise-0.1.1.tgz",
  "_shasum": "43f3d2c8dfcb2bf071481252cd9b76433c08eecb",
  "_shrinkwrap": null,
  "_spec": "clean-css-promise@^0.1.0",
  "_where": "/Users/natemamman/reader/node_modules/broccoli-clean-css",
  "author": {
    "name": "Shinnosuke Watanabe",
    "url": "https://github.com/shinnn"
  },
  "bugs": {
    "url": "https://github.com/shinnn/clean-css-promise/issues"
  },
  "dependencies": {
    "array-to-error": "^1.0.0",
    "clean-css": "^3.4.5",
    "pinkie-promise": "^2.0.0"
  },
  "description": "Promises/A+ version of clean-css",
  "devDependencies": {
    "@shinnn/eslint-config-node": "^1.0.1",
    "babel-cli": "^6.2.0",
    "babel-preset-es2015": "^6.1.18",
    "eslint": "^1.6.0",
    "istanbul": "^0.3.22",
    "istanbul-coveralls": "^1.0.3",
    "tape": "^4.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "43f3d2c8dfcb2bf071481252cd9b76433c08eecb",
    "tarball": "https://registry.npmjs.org/clean-css-promise/-/clean-css-promise-0.1.1.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "373e0b095b12a11043701b2e8bb0e202e1cc3427",
  "homepage": "https://github.com/shinnn/clean-css-promise#readme",
  "keywords": [
    "css",
    "clean-css",
    "cleancss",
    "style",
    "styles",
    "stylesheet",
    "minifier",
    "minification",
    "compress",
    "optimization",
    "optimize",
    "optimizer",
    "promise",
    "promises",
    "promisified",
    "then",
    "thenable"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "shinnn",
      "email": "snnskwtnb@gmail.com"
    }
  ],
  "name": "clean-css-promise",
  "optionalDependencies": {},
  "readme": "# clean-css-promise\n\n[![NPM version](https://img.shields.io/npm/v/clean-css-promise.svg)](https://www.npmjs.com/package/clean-css-promise)\n[![Build Status](https://travis-ci.org/shinnn/clean-css-promise.svg?branch=master)](https://travis-ci.org/shinnn/clean-css-promise)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/clean-css-promise.svg)](https://coveralls.io/github/shinnn/clean-css-promise?branch=master)\n[![Dependency Status](https://david-dm.org/shinnn/clean-css-promise.svg)](https://david-dm.org/shinnn/clean-css-promise)\n[![Dependency Status](https://david-dm.org/shinnn/clean-css-promise.svg)](https://david-dm.org/shinnn/clean-css-promise)\n\n[Promises/A+](https://promisesaplus.com/) version of [clean-css](https://github.com/jakubpawlowicz/clean-css)\n\n```javascript\nconst CleanCssPromise = require('clean-css-promise');\n\nnew CleanCssPromise()\n.minify('p { margin: 1px 1px 1px 1px; }')\n.then(result => console.log(result.styles)) //=> 'p{margin:1px}'\n```\n\n## Installation\n\n[Use npm.](https://docs.npmjs.com/cli/install)\n\n```\nnpm install clean-css-promise\n```\n\n## API\n\n```javascript\nconst CleanCssPromise = require('clean-css-promise');\n```\n\n### CleanCssPromise([*options*])\n\n[clean-css-api]: https://github.com/jakubpawlowicz/clean-css#how-to-use-clean-css-api\n\n*options*: `Object` (clean-css [options][clean-css-api])  \nReturn: `Object` (clean-css instance)\n\nIt has the same API as [clean-css's][clean-css-api], except for:\n\n* `.minify()` method is [promisified](https://promise-nuggets.github.io/articles/07-wrapping-callback-functions.html).\n* The error passed to [*onRejected*](https://promisesaplus.com/#point-30) function is modified with [array-to-error](https://github.com/shinnn/array-to-error).\n\n```javascript\nconst CleanCssPromise = require('clean-css-promise');\n\nnew CleanCssPromise({})\n.minify('@import /foo;@import /bar;')\n.catch(err => {\n  console.error(err.message);\n  //=> 'Broken @import declaration of \"/foo\"\\nBroken @import declaration of \"/bar\"'\n});\n```\n\n## License\n\nCopyright (c) 2015 [Shinnosuke Watanabe](https://github.com/shinnn)\n\nLicensed under [the MIT License](./LICENSE).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shinnn/clean-css-promise.git"
  },
  "scripts": {
    "coverage": "node --strong_mode node_modules/.bin/istanbul cover test.js",
    "coveralls": "${npm_package_scripts_coverage} && istanbul-coveralls",
    "pretest": "eslint --config @shinnn/node src.js test.js && babel --presets es2015 src.js --out-file index.js",
    "test": "node --strong_mode --throw-deprecation --track-heap-objects test.js"
  },
  "version": "0.1.1"
}
